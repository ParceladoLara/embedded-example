/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppShellRouteImport } from './routes/_appShell'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppShellLaraRouteImport } from './routes/_appShell/lara'
import { Route as AppShellHomeRouteImport } from './routes/_appShell/home'

const AppShellRoute = AppShellRouteImport.update({
  id: '/_appShell',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppShellLaraRoute = AppShellLaraRouteImport.update({
  id: '/lara',
  path: '/lara',
  getParentRoute: () => AppShellRoute,
} as any)
const AppShellHomeRoute = AppShellHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AppShellRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof AppShellHomeRoute
  '/lara': typeof AppShellLaraRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof AppShellHomeRoute
  '/lara': typeof AppShellLaraRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_appShell': typeof AppShellRouteWithChildren
  '/_appShell/home': typeof AppShellHomeRoute
  '/_appShell/lara': typeof AppShellLaraRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/home' | '/lara'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/home' | '/lara'
  id: '__root__' | '/' | '/_appShell' | '/_appShell/home' | '/_appShell/lara'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppShellRoute: typeof AppShellRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_appShell': {
      id: '/_appShell'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppShellRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_appShell/lara': {
      id: '/_appShell/lara'
      path: '/lara'
      fullPath: '/lara'
      preLoaderRoute: typeof AppShellLaraRouteImport
      parentRoute: typeof AppShellRoute
    }
    '/_appShell/home': {
      id: '/_appShell/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppShellHomeRouteImport
      parentRoute: typeof AppShellRoute
    }
  }
}

interface AppShellRouteChildren {
  AppShellHomeRoute: typeof AppShellHomeRoute
  AppShellLaraRoute: typeof AppShellLaraRoute
}

const AppShellRouteChildren: AppShellRouteChildren = {
  AppShellHomeRoute: AppShellHomeRoute,
  AppShellLaraRoute: AppShellLaraRoute,
}

const AppShellRouteWithChildren = AppShellRoute._addFileChildren(
  AppShellRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppShellRoute: AppShellRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
